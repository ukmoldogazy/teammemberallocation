{"ast":null,"code":"var _jsxFileName = \"/Users/moldogazy/Desktop/JS+React/teammemberallocation/src/GroupedTeamMembers.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GroupedTeamMembers = _ref => {\n  _s();\n  let {\n    employees,\n    selectedTeam,\n    setTeam\n  } = _ref;\n  const [groupedEmployees, setGroupedData] = useState(groupTeamMembers());\n  function groupTeamMembers() {\n    let teams = [];\n    let teamAMembers = employees.filter(employee => employee.teamName === \"TeamA\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center mt-3 mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-8\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" Grouped Team Members\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(GroupedTeamMembers, \"OLkGI3a1EIYuD50SyTGfmELePv4=\");\n_c = GroupedTeamMembers;\nexport default GroupedTeamMembers;\nvar _c;\n$RefreshReg$(_c, \"GroupedTeamMembers\");","map":{"version":3,"names":["useState","GroupedTeamMembers","employees","selectedTeam","setTeam","groupedEmployees","setGroupedData","groupTeamMembers","teams","teamAMembers","filter","employee","teamName"],"sources":["/Users/moldogazy/Desktop/JS+React/teammemberallocation/src/GroupedTeamMembers.jsx"],"sourcesContent":["import { useState } from \"react\";\n\nconst GroupedTeamMembers = ({ employees, selectedTeam, setTeam }) => {\n  const [groupedEmployees, setGroupedData] = useState(groupTeamMembers());\n\n  function groupTeamMembers() {\n    let teams = [];\n\n    let teamAMembers = employees.filter(\n      (employee) => employee.teamName === \"TeamA\"\n    );\n  }\n\n  return (\n    <main className=\"container\">\n      <div className=\"row justify-content-center mt-3 mb-4\">\n        <div className=\"col-8\">\n          <h1> Grouped Team Members</h1>\n        </div>\n      </div>\n    </main>\n  );\n};\nexport default GroupedTeamMembers;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC;AAEjC,MAAMC,kBAAkB,GAAG,QAA0C;EAAA;EAAA,IAAzC;IAAEC,SAAS;IAAEC,YAAY;IAAEC;EAAQ,CAAC;EAC9D,MAAM,CAACC,gBAAgB,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAACO,gBAAgB,EAAE,CAAC;EAEvE,SAASA,gBAAgB,GAAG;IAC1B,IAAIC,KAAK,GAAG,EAAE;IAEd,IAAIC,YAAY,GAAGP,SAAS,CAACQ,MAAM,CAChCC,QAAQ,IAAKA,QAAQ,CAACC,QAAQ,KAAK,OAAO,CAC5C;EACH;EAEA,oBACE;IAAM,SAAS,EAAC,WAAW;IAAA,uBACzB;MAAK,SAAS,EAAC,sCAAsC;MAAA,uBACnD;QAAK,SAAS,EAAC,OAAO;QAAA,uBACpB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAA8B;QAAA;QAAA;QAAA;MAAA;IAC1B;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,QACD;AAEX,CAAC;AAAC,GApBIX,kBAAkB;AAAA,KAAlBA,kBAAkB;AAqBxB,eAAeA,kBAAkB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}